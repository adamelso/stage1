{% extends '::base.html.twig' %}

{% block javascripts %}
<script type="text/javascript">
$('#form-delete').on('submit', function(event) {
    var input = $('#project_name');

    if (input.val() != input.data('expect')) {
        event.preventDefault();
        event.stopPropagation();
    }
});

$('#project_name').on('keyup', function(event) {
    var $this = $(this);
    $('#form-delete button').attr('disabled', $this.val() != $this.data('expect'));
});
</script>
{% endblock javascripts %}

{% block body %}
{% include 'AppCoreBundle:Project:_header.html.twig' %}

<fieldset>
    <legend>Project's base image</legend>

    {{ form_start(base_image_form) }}

    <div class="row-fluid">
        <div class="span6">
            {{ form_row(base_image_form.docker_base_image) }}
        </div>

        <div class="span6 help">
            <p>The base image determines what will be available by default in your runtime environment. The <strong><a href="http://help.stage1.io/article/the-ubuntu-precise-12-04-base-image/"><i class="fa fa-question-sign"></i> Ubuntu Precise (12.04)</a></strong> base image is Docker's base Ubuntu image, so there's nothing much on the image and you will have to do all the provisioning by hand. The <strong><a href="http://help.stage1.io/article/the-symfony2-base-image/"><i class="fa fa-question-sign"></i> Symfony 2</a></strong> base image is Stage1's pre-baked Symfony 2 image. It contains everything needed to run a standard Symfony 2 application: NginX, PHP 5.4 and a MySQL instance.</p>
            <p class="readmore"><a href="http://help.stage1.io/"><i class="fa fa-question-sign"></i> Read more about the different base images available</a></p>
        </div>
    </div>

    <div class="form-actions">
        {{ form_widget(base_image_form.save, { attr: { class: "btn btn-primary" } }) }}
    </div>


    {{ form_end(base_image_form) }}
</fieldset>

<fieldset>
    <legend>Project's environment</legend>

    <form id="form-project-env" method="post" action="{{ path('app_core_project_env', { id: project.id }) }}">
        <input type="hidden" name="csrf_token" value="{{ csrf_token }}" />

        <div class="row-fluid">
            <div class="span6">
                <textarea class="per-line-settings" name="project_env" id="project_env">{{ project.env }}</textarea>
            </div>
            <div class="span6 help">
                <p>Rules:</p>
                <ul>
                    <li>one variable per line,</li>
                    <li>in the <code>NAME=VALUE</code> format,</li>
                    <li>no quoting</li>
                </ul>

                <p>Example:</p>

                <pre>SYMFONY_ENV=prod
FOO_API_KEY=7BMnTzAIoTeVg
FOO=some value with spaces</pre>

                <p class="readmore"><a href="http://help.stage1.io/article/setup-custom-environment-variables-in-my-containers/"><i class="fa fa-question-sign"></i> Read more about environment variables</a></p>
            </div>
        </div>

        <div class="form-actions">
            <button class="btn btn-primary" type="submit">Save project's environment</button>
        </div>
    </form>
</fieldset>

<fieldset>
    <legend>Project's URLs</legend>
    <form id="form-project-urls" method="post" action="{{ path('app_core_project_urls', { id: project.id }) }}">
        <input type="hidden" name="csrf_token" value="{{ csrf_token }}" />

        <div class="row-fluid">
            <div class="span6">
                <textarea class="per-line-settings" name="project_urls" id="project_urls">{{ project.urls }}</textarea>
            </div>
            <div class="span6 help">
                <p>Rules:</p>
                <ul>
                    <li>One subdomain per line</li>
                    <li>Subdomains are prepended to the base URL</li>
                </ul>

                <p>Example:</p>
                <pre>foo
bar</pre>
                <p>Will produce 2 more URLs for your builds:</p>

                <ul>
                    <li><tt>foo.<em>branch</em>.{{ project.slug }}.stage1.io</tt></li>
                    <li><tt>bar.<em>branch</em>.{{ project.slug }}.stage1.io</tt></li>
                </ul>
            </div>
        </div>
        <div class="form-actions">
            <button class="btn btn-primary" type="submit">Save project's URLs</button>
        </div>
    </form>
</fieldset>

<fieldset>
    <legend>Project's public keys</legend>
    <p class="lead">These are all the public keys you can use to give Stage1 access to private dependencies for your project.</p>

    {% include 'AppCoreBundle:Project:_public_key.html.twig' with {
        label: 'Project',
        key: project.publicKey
    } %}

    {% if project.organization %}
        {% include 'AppCoreBundle:Project:_public_key.html.twig' with {
            label: project.organization.name,
            key: project.organization.publicKey
        } %}
    {% endif %}

    {% for user in project.users %}
        {% include 'AppCoreBundle:Project:_public_key.html.twig' with {
            label: user.username,
            key: user.publicKey
        } %}
    {% endfor %}
</fieldset>

<form id="form-delete" class="form-inline" method="post" action="{{ path('app_core_project_delete', { id: project.id }) }}">
    <input type="hidden" name="csrf_token" value="{{ csrf_token }}" />
    <fieldset>
        <legend>Delete project</legend>
        {% for message in app.session.flashbag.get('delete-error') %}
        <div class="alert alert-error">
            {{ message }}
        </div>
        {% endfor %}
        <p>Please type in the name of the project to confirm.</p>
        <p><strong>This action cannot be undone.</strong></p>
        <div class="input-append">
            <input autocomplete="off" type="text" name="name" id="project_name" class="" data-expect="{{ project.name }}" placeholder="{{ project.name }}" required />
            <button type="submit" class="btn btn-danger" disabled>Delete</button>
        </div>
    </fieldset>
</form>
{% endblock body %}
